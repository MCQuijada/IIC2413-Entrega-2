Clientes
    $ id_cliente (PK)
    nombre
    email
    telefono
    clave

Direcciones
    $ id_direccion (PK)
    $ id_cliente (FK)
    direccion
    cut_comuna (FK)

Comuna
    cut_comuna (PK)
    nombre
    provincia
    region

Pedidos
    id_pedido
    email_cliente (FK)
    nombre_delivery (FK)
    nombre_despachador (FK)
    fecha
    hora
    estado

Pedidos-Platos
    $ id_plato
    $ id_pedido

Platos
    id_plato (PK)
    nombre
    descripcion
    disponibilidad
    estilo
    restriccion
    porciones
    precio
    tiempo
    repartomin
    vigente

Ingredientes
    $ id_ingrediente
    $ nombre_ingrediente

Plato-Ingredientes
    id_plato
    id_ingrediente

Plato-Restaurantes
    $ id_plato
    $ nombre_restaurante

Restaurantes
    nombre_restaurante (PK)
    vigente
    estilo
    repartomin

direccion_restaurante
    nombre_restaurante (FK)
    telefono (PK)
    sucursal
    direccion
    area(comuna)

Suscripciones
    cliente_email (FK)
    nombre_delivery (PK)
    estado
    fecha
    ciclo

Calificacion
    id_pedido
    resdel
    cliente

Clientes/Delivery/Despacho
    $ id_cliente (FK)
    deliverynombre (FK)
    despachadornombre (FK)

Delivery
    deliverynombre
    deliveryvigente
    deliverytelefono
    deliverytiempo
    deliverypreciounitario
    deliverypreciomensual

Despachador
    despachadornombre
    despachadortelefono

RELACIONES Y CARDINALIDAD

(N, 1) Direcciones - Clientes: Un cliente puede tener varias direcciones, una direccion solo puede ser de un solo cliente
(N, 1) Direcciones - Comunas: Una comuna puede tener varias direcciones dentro, pero una direccion solo esta en un unica comuna

(N, N) Plato - Restaurantes: Un plato puede servirse en mas de un restaurante, pero un restaurante puede servir varios platos
(N, N) Plato - Ingredientes: Un plato puede tener mas de un ingrediente, un ingrediente puede tener mas de un plato

(N, N) Pedidos - Platos: Un pedido puede contener varios platos, un plato puede pertenecer a mas de un pedido
(N, 1) Pedidos - Despachadores: Un despachador puede hacer varios pedidos, pero un pedido solo lo hace un solo despachador
(N, 1) Pedidos - Delivery: Un delivery puede hacer varios pedidos, pero un pedido lo hace un unico delivery
(N, 1) Pedidos - Clientes: Un cliente puede hacer varios pedidos, pero un pedido lo hace un solo cliente
(N, 1) Pedidos - Sucursales: Una sucursal puede recibir varios pedidos y pedido esta hecho por una sola sucursal

(1, 1) Suscripciones - Clientes: Un cliente tiene una unica suscripcion, una suscripcion alberga un cliente a la vez
(N, 1) Suscripciones - Delivery: Una suscripcion la hace un solo delivery, pero un delivery puede hacer varias suscripciones

(1, 1) Calificacion - Pedido: Una calificacion es de un solo pedido, y un pedido puede tener una sola calificacion

(N, 1) Sucursales - Restaurantes: Un restaurante puede tener varias sucursales, pero una sucursal pertenece a un solo restoran
(N, 1) Sucursales - Comunas: Una comuna puede tener varias sucursales dentro, pero una sucursal pertence a una sola comuna

ORDEN DE AGREGACION Y MODIFICACIONES CON PYTHON Y POSTGRES

1. clientes.csv
    - Agregar un ID a todos los clientes, agregar el mismo si se repite
    - Separar y crear una tabla direccciones clientes, con la direccion, el cut y el id del cliente asociado
    - En la tabla clientes quitar todos los elementos repetidos
    - TABLA DIRECCIONES:
        - En la tabla direcciones asignar un id a cada direccion particular
        - Poner el cut de la comuna como una llave foranea
        - Poner el id del cliente como una llave foranea
        - Poner el id de la direccion como llave primaria
2. comuna.csv
    - Asignar el cut de la comuna como llave primaria
3. platos.csv
    - Asignar el id del plato como la llave primaria
    - No agregar la linea de ingredientes, guardar todos los ingredientes para crear una nueva tabla
    - TABLA INGREDIENTES:
        - Poner un id_ingrediente como llave primaria
        - Poner cada ingrediente asociado
    - TABLA PLATO_INGREDIENTES
        - Poner id_ingrediente y id_plato en relacion many o many
    - TABLA PLATO-RESTAURANTES:
        - Guardar la tabla de plato restaurantes con el nombre del restoran y el id del plato
4. cdeldes.csv
    - Separar lo que es delivery, asignar un id_delivery y toda la info relacionada
    - Separa lo que es despachador, asignar un id_despachador y toda la info relacionada

5. restaurantes.csv
    - Separar las direcciones del resto de elementos y crear una tabla sucursales
    - TABLA SUCURSALES:
        - asignar un id_sucursal a cada sucursal
        - colocar el id_del restaurante del cual se saco la sucursal como foreign key
        - Poner el nombre de la sucursal, direccion, fono
        - Asociar el nombre de la comuna son su cut, y poner el cut de la comuna como foreign key a la tabla de Comunas
    - Colocar el resto de variables del restoran
    - TABLA PLATO-RESTAURANTES:
        - Volver a la tabla de plato restoranes y cambiar el nombre del restoran por el id del restoran y ponerlo en la bdd
6. pedidos.csv
    - Asignar el id_pedido como la llave primaria
    - Relacionar el correo del cliente con su id de la tabla de clientes y ponerlo en la tabla pedidos como llave foranea
    - Relacionar el nombre del delivery con su id de la tabla de delivery y ponerlo en la tabla de pedidos como llave foranea
    - Relacionar el nombre del despachador con su id de la tabla de despachadores y ponerlo en la tabla de pedidos como llave foranea
    - Relacionar el nombre de la sucursal con el id de la sucursal
    - Agregar los platos a la tabla de relacion pedidos - platos con el id del cliente y el id de los platos
    - Colocar el resto de la info
7. suscripciones.csv
    - asignar un id_suscripcion a cada linea
    - asociar el email del cliente a su id_cliente y guardarlo
    - asociar el nombre del delivery a su id_delivery y guardarlo
    - agregar el resto de elementos
8. calificacion.csv
    - Agregar un id_calificacion a cada linea
    - Asignar el id_pedido como foreign key
    - Colocar el resto de variables

